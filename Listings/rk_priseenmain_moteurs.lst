


ARM Macro Assembler    Page 1 


    1 00000000         ;; RK - Evalbot (Cortex M3 de Texas Instrument)
    2 00000000         ; programme - Pilotage 2 Moteurs Evalbot par PWM tout en
                        ASM (Evalbot tourne sur lui m?me)
    3 00000000         
    4 00000000         
    5 00000000         
    6 00000000                 AREA             |.text|, CODE, READONLY
    7 00000000                 ENTRY
    8 00000000                 EXPORT           __main
    9 00000000         
   10 00000000         ;; The IMPORT command specifies that a symbol is defined
                        in a shared object at runtime.
   11 00000000                 IMPORT           MOTEUR_INIT ; initialise les mo
                                                            teurs (configure le
                                                            s pwms + GPIO)
   12 00000000         
   13 00000000                 IMPORT           MOTEUR_DROIT_ON ; activer le mo
                                                            teur droit
   14 00000000                 IMPORT           MOTEUR_DROIT_OFF ; d?activer le
                                                             moteur droit
   15 00000000                 IMPORT           MOTEUR_DROIT_AVANT ; moteur dro
                                                            it tourne vers l'av
                                                            ant
   16 00000000                 IMPORT           MOTEUR_DROIT_ARRIERE ; moteur d
                                                            roit tourne vers l'
                                                            arri?re
   17 00000000                 IMPORT           MOTEUR_DROIT_INVERSE ; inverse 
                                                            le sens de rotation
                                                             du moteur droit
   18 00000000         
   19 00000000                 IMPORT           MOTEUR_GAUCHE_ON ; activer le m
                                                            oteur gauche
   20 00000000                 IMPORT           MOTEUR_GAUCHE_OFF ; d?activer l
                                                            e moteur gauche
   21 00000000                 IMPORT           MOTEUR_GAUCHE_AVANT ; moteur ga
                                                            uche tourne vers l'
                                                            avant
   22 00000000                 IMPORT           MOTEUR_GAUCHE_ARRIERE ; moteur 
                                                            gauche tourne vers 
                                                            l'arri?re
   23 00000000                 IMPORT           MOTEUR_GAUCHE_INVERSE ; inverse
                                                             le sens de rotatio
                                                            n du moteur gauche
   24 00000000         
   25 00000000         ; This register controls the clock gating logic in norma
                       l Run mode
   26 00000000 400FE108 
                       SYSCTL_PERIPH_GPIO
                               EQU              0x400FE108  ; SYSCTL_RCGC2_R (p
                                                            291 datasheet de lm
                                                            3s9b92.pdf)
   27 00000000         
   28 00000000         ; The GPIODATA register is the data register
   29 00000000 40025000 
                       GPIO_PORTF_BASE
                               EQU              0x40025000  ; GPIO Port F (APB)
                                                             base: 0x4002.5000 
                                                            (p416 datasheet de 
                                                            lm3s9B92.pdf)



ARM Macro Assembler    Page 2 


   30 00000000         
   31 00000000         ; The GPIODATA register is the data register
   32 00000000 40007000 
                       GPIO_PORTD_BASE
                               EQU              0x40007000  ; GPIO Port D (APB)
                                                             base: 0x4000.7000 
                                                            (p416 datasheet de 
                                                            lm3s9B92.pdf)
   33 00000000         
   34 00000000         ; The GPIODATA register is the data register
   35 00000000 40024000 
                       GPIO_PORTE_BASE
                               EQU              0x40024000  ; GPIO Port E (APB)
                                                             base: 0x4002.4000 
                                                            (p416 datasheet de 
                                                            lm3s9B92.pdf)
   36 00000000         
   37 00000000         
   38 00000000         
   39 00000000         ; configure the corresponding pin to be an output
   40 00000000         ; all GPIO pins are inputs by default
   41 00000000 00000400 
                       GPIO_O_DIR
                               EQU              0x00000400  ; GPIO Direction (p
                                                            417 datasheet de lm
                                                            3s9B92.pdf)
   42 00000000         
   43 00000000         ; The GPIODR2R register is the 2-mA drive control regist
                       er
   44 00000000         ; By default, all GPIO pins have 2-mA drive.
   45 00000000 00000500 
                       GPIO_O_DR2R
                               EQU              0x00000500  ; GPIO 2-mA Drive S
                                                            elect (p428 datashe
                                                            et de lm3s9B92.pdf)
                                                            
   46 00000000         
   47 00000000         ; Digital enable register
   48 00000000         ; To use the pin as a digital input or output, the corre
                       sponding GPIODEN bit must be set.
   49 00000000 0000051C 
                       GPIO_O_DEN
                               EQU              0x0000051C  ; GPIO Digital Enab
                                                            le (p437 datasheet 
                                                            de lm3s9B92.pdf)
   50 00000000         
   51 00000000         ; Pull_up
   52 00000000 00000510 
                       GPIO_I_PUR
                               EQU              0x00000510  ; GPIO Pull-Up (p43
                                                            2 datasheet de lm3s
                                                            9B92.pdf)
   53 00000000         
   54 00000000         ; Broches select
   55 00000000 00000030 
                       BROCHE4_5
                               EQU              0x30        ; led1 & led2 sur b
                                                            roche 4 et 5 
   56 00000000         



ARM Macro Assembler    Page 3 


   57 00000000 00000040 
                       BROCHE6 EQU              0x40        ; bouton poussoir 1
                                                            
   58 00000000         
   59 00000000 000000C0 
                       BROCHE6_7
                               EQU              0xC0        ; bouton poussoir 1
                                                            
   60 00000000         
   61 00000000 00000003 
                       BROCHE0_1
                               EQU              0x03
   62 00000000         
   63 00000000         ; blinking frequency
   64 00000000 002FFFFF 
                       DUREE   EQU              0x002FFFFF
   65 00000000         
   66 00000000 0AFFFFFF 
                       DUREE90 EQU              0xAFFFFFF
   67 00000000         
   68 00000000         
   69 00000000         
   70 00000000         
   71 00000000         
   72 00000000         __main
   73 00000000         
   74 00000000         ; ;; Enable the Port F & D peripheral clock   (p291 data
                       sheet de lm3s9B96.pdf)
   75 00000000         ; ;;         
   76 00000000 F8DF 910C       ldr              r9, = SYSCTL_PERIPH_GPIO 
                                                            ;; RCGC2
   77 00000004 F04F 0438       mov              r4, #0x00000038 ;; Enable clock
                                                             sur GPIO D et F o?
                                                             sont branch?s les 
                                                            leds (0x28 == 0b101
                                                            000)
   78 00000008         ; ;;                              (GPIO::FEDCBA)
   79 00000008 F8C9 4000       str              r4, [r9]
   80 0000000C         ;; Enable clock sur GPIO E o? est branch? le bouton pous
                       soir (0x10 == 0b10000)
   81 0000000C         ;; (GPIO::FEDCBA)
   82 0000000C         
   83 0000000C         ; ;; "There must be a delay of 3 system clocks before an
                       y GPIO reg. access  (p413 datasheet de lm3s9B92.pdf)
   84 0000000C BF00            nop                          ;; tres tres import
                                                            ant....
   85 0000000E BF00            nop
   86 00000010 BF00            nop                          ;; pas necessaire e
                                                            n simu ou en debbug
                                                             step by step...
   87 00000012         
   88 00000012         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION LED
   89 00000012         
   90 00000012 F8DF 9100       ldr              r9, = GPIO_PORTF_BASE+GPIO_O_DI
R 
                                                            ;; 1 Pin du portF e
                                                            n sortie (broche 4 
                                                            : 00010000)
   91 00000016 F04F 0430       ldr              r4, = BROCHE4_5 ; 0x30 = 0b 001



ARM Macro Assembler    Page 4 


                                                            1 0000 
   92 0000001A F8C9 4000       str              r4, [r9]
   93 0000001E         
   94 0000001E F8DF 90F8       ldr              r9, = GPIO_PORTF_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
   95 00000022 F04F 0430       ldr              r4, = BROCHE4_5
   96 00000026 F8C9 4000       str              r4, [r9]
   97 0000002A         
   98 0000002A F8DF 90F0       ldr              r9, = GPIO_PORTF_BASE+GPIO_O_DR
2R 
                                                            ;; Choix de l'inten
                                                            sit? de sortie (2mA
                                                            )
   99 0000002E F04F 0430       ldr              r4, = BROCHE4_5
  100 00000032 F8C9 4000       str              r4, [r9]
  101 00000036         
  102 00000036 F04F 0200       mov              r2, #0x000  ;; pour eteindre LE
                                                            D
  103 0000003A         
  104 0000003A         ; allumer la led broche 4 (BROCHE4_5)
  105 0000003A F04F 0330       mov              r3, #BROCHE4_5 ;; Allume LED1&2
                                                             portF broche 4&5 :
                                                             00110000
  106 0000003E         
  107 0000003E F8DF 90E0       ldr              r9, = GPIO_PORTF_BASE + (BROCHE
4_5<<2) 
                                                            ;; @data Register =
                                                             @base + (mask<<2) 
                                                            ==> LED1
  108 00000042         
  109 00000042         ;vvvvvvvvvvvvvvvvvvvvvvvFin configuration LED 
  110 00000042         
  111 00000042         
  112 00000042         
  113 00000042         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION Switcher 1
  114 00000042         
  115 00000042 4F38            ldr              r7, = GPIO_PORTD_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
  116 00000044 F04F 04C0       ldr              r4, = BROCHE6_7
  117 00000048 603C            str              r4, [r7]
  118 0000004A         
  119 0000004A 4F37            ldr              r7, = GPIO_PORTD_BASE+GPIO_I_PU
R 
                                                            ;; Pull_up
  120 0000004C F04F 04C0       ldr              r4, = BROCHE6_7
  121 00000050 603C            str              r4, [r7]
  122 00000052         
  123 00000052 4F36            ldr              r7, = GPIO_PORTD_BASE + (BROCHE
6_7<<2) 
                                                            ;; @data Register =
                                                             @base + (mask<<2) 
                                                            ==> Switcher
  124 00000054         
  125 00000054         ;vvvvvvvvvvvvvvvvvvvvvvvFin configuration Switcher 
  126 00000054         



ARM Macro Assembler    Page 5 


  127 00000054         
  128 00000054         
  129 00000054         
  130 00000054         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION Bumper 1
  131 00000054         
  132 00000054 F8DF 80D8       ldr              r8, = GPIO_PORTE_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
  133 00000058 F04F 0403       ldr              r4, = BROCHE0_1
  134 0000005C F8C8 4000       str              r4, [r8]
  135 00000060         
  136 00000060 F8DF 80D0       ldr              r8, = GPIO_PORTE_BASE+GPIO_I_PU
R 
                                                            ;; Pull_up
  137 00000064 F04F 0403       ldr              r4, = BROCHE0_1
  138 00000068 F8C8 4000       str              r4, [r8]
  139 0000006C         
  140 0000006C F8DF 80C8       ldr              r8, = GPIO_PORTE_BASE + (BROCHE
0_1<<2) 
                                                            ;; @data Register =
                                                             @base + (mask<<2) 
                                                            ==> Switcher
  141 00000070         
  142 00000070         ;vvvvvvvvvvvvvvvvvvvvvvvFin configuration Switcher 
  143 00000070         
  144 00000070         
  145 00000070         
  146 00000070         
  147 00000070         
  148 00000070         
  149 00000070         
  150 00000070         
  151 00000070         
  152 00000070         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CLIGNOTTEMENT
  153 00000070         
  154 00000070 F8C9 3000       str              r3, [r9]    ;; Allume LED1&2 po
                                                            rtF broche 4&5 : 00
                                                            110000 (contenu de 
                                                            r3)
  155 00000074         
  156 00000074         ;-------------------------------------------------------
                       --------------------------------------------------------
                       -----
  157 00000074         ;; BL Branchement vers un lien (sous programme)
  158 00000074         
  159 00000074         ; Configure les PWM + GPIO
  160 00000074 F7FF FFFE       BL               MOTEUR_INIT
  161 00000078         
  162 00000078         ; Activer les deux moteurs droit et gauche
  163 00000078 F7FF FFFE       BL               MOTEUR_DROIT_ON
  164 0000007C F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  165 00000080         
  166 00000080 F8DF D0B8       ldr              r13, =DUREE90 
                                                            ; DUREE DE ROTATION
                                                            
  167 00000084         ; Boucle de pilotage des 2 Moteurs (Evalbot tourne sur l
                       ui m?me)
  168 00000084         loop



ARM Macro Assembler    Page 6 


  169 00000084 F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  170 00000088 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  171 0000008C         ; Evalbot avance droit devant
  172 0000008C F000 F839       BL               WAIT        ; BL (Branchement v
                                                            ers le lien WAIT); 
                                                            possibilit? de reto
                                                            ur ? la suite avec 
                                                            (BX LR)
  173 00000090 E7F8            B                loop
  174 00000092         
  175 00000092         
  176 00000092         gameover
  177 00000092 F7FF FFFE       BL               MOTEUR_GAUCHE_OFF
  178 00000096 F7FF FFFE       BL               MOTEUR_DROIT_OFF
  179 0000009A         
  180 0000009A         gauche
  181 0000009A F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE
  182 0000009E F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  183 000000A2 F000 F82E       BL               WAIT
  184 000000A6 F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  185 000000AA F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  186 000000AE E7E9            B                loop
  187 000000B0         
  188 000000B0         droite
  189 000000B0 F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  190 000000B4 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  191 000000B8 F000 F823       BL               WAIT
  192 000000BC F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  193 000000C0 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  194 000000C4 E7DE            B                loop
  195 000000C6         
  196 000000C6         avance
  197 000000C6 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  198 000000CA F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  199 000000CE         
  200 000000CE         
  201 000000CE         conditions
  202 000000CE F8D8 A000       ldr              r10,[r8]
  203 000000D2 F1BA 0F00       CMP              r10,#0x00
  204 000000D6 D0DC            BEQ              gameover
  205 000000D8         
  206 000000D8 F8D8 A000       ldr              r10,[r8]
  207 000000DC F1BA 0F01       CMP              r10,#0x01
  208 000000E0 D0DB            BEQ              gauche
  209 000000E2         
  210 000000E2 F8D8 A000       ldr              r10,[r8]
  211 000000E6 F1BA 0F02       CMP              r10,#0x02
  212 000000EA D0E1            BEQ              droite
  213 000000EC         
  214 000000EC F8D8 A000       ldr              r10,[r8]
  215 000000F0 F1BA 0F03       CMP              r10,#0x03
  216 000000F4 D0E7            BEQ              avance
  217 000000F6         
  218 000000F6         
  219 000000F6         ;; retour ? la suite du lien de branchement
  220 000000F6 F640 71FF 
                       WAIT2   ldr              r1, =0x000FFF
  221 000000FA         
  222 000000FA         



ARM Macro Assembler    Page 7 


  223 000000FA 3901    wait2   subs             r1, #1
  224 000000FC F7FF FFE7       BL               conditions
  225 00000100 4770            BX               LR
  226 00000102         
  227 00000102         ;; Boucle d'attante  
  228 00000102 F640 71FF 
                       WAIT    ldr              r1, =0x000FFF
  229 00000106         
  230 00000106         
  231 00000106 3901    wait1   subs             r1, #1
  232 00000108 F7FF FFE1       BL               conditions
  233 0000010C 4770            BX               LR
  234 0000010E BF00            NOP
  235 00000110                 END
              400FE108 
              40025400 
              4002551C 
              40025500 
              400250C0 
              4000751C 
              40007510 
              40007300 
              4002451C 
              40024510 
              4002400C 
              0AFFFFFF 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --depend=.\ob
jects\rk_priseenmain_moteurs.d -o.\objects\rk_priseenmain_moteurs.o -I.\RTE\_Ta
rget_1 -I"C:\Users\TOP SECRET\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Cor
e\Include" -I"C:\Users\TOP SECRET\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\Devic
e\ARM\ARMCM3\Include" --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 
1" --predefine="__UVISION_VERSION SETA 528" --predefine="_RTE_ SETA 1" --predef
ine="ARMCM3 SETA 1" --list=.\listings\rk_priseenmain_moteurs.lst RK_PriseEnMain
_Moteurs.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 6 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: .text unused
WAIT 00000102

Symbol: WAIT
   Definitions
      At line 228 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 172 in file RK_PriseEnMain_Moteurs.s
      At line 183 in file RK_PriseEnMain_Moteurs.s
      At line 191 in file RK_PriseEnMain_Moteurs.s

WAIT2 000000F6

Symbol: WAIT2
   Definitions
      At line 220 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: WAIT2 unused
__main 00000000

Symbol: __main
   Definitions
      At line 72 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 8 in file RK_PriseEnMain_Moteurs.s
Comment: __main used once
avance 000000C6

Symbol: avance
   Definitions
      At line 196 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 216 in file RK_PriseEnMain_Moteurs.s
Comment: avance used once
conditions 000000CE

Symbol: conditions
   Definitions
      At line 201 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 224 in file RK_PriseEnMain_Moteurs.s
      At line 232 in file RK_PriseEnMain_Moteurs.s

droite 000000B0

Symbol: droite
   Definitions
      At line 188 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 212 in file RK_PriseEnMain_Moteurs.s
Comment: droite used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

gameover 00000092

Symbol: gameover
   Definitions
      At line 176 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 204 in file RK_PriseEnMain_Moteurs.s
Comment: gameover used once
gauche 0000009A

Symbol: gauche
   Definitions
      At line 180 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 208 in file RK_PriseEnMain_Moteurs.s
Comment: gauche used once
loop 00000084

Symbol: loop
   Definitions
      At line 168 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 173 in file RK_PriseEnMain_Moteurs.s
      At line 186 in file RK_PriseEnMain_Moteurs.s
      At line 194 in file RK_PriseEnMain_Moteurs.s

wait1 00000106

Symbol: wait1
   Definitions
      At line 231 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: wait1 unused
wait2 000000FA

Symbol: wait2
   Definitions
      At line 223 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: wait2 unused
12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BROCHE0_1 00000003

Symbol: BROCHE0_1
   Definitions
      At line 61 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 133 in file RK_PriseEnMain_Moteurs.s
      At line 137 in file RK_PriseEnMain_Moteurs.s
      At line 140 in file RK_PriseEnMain_Moteurs.s

BROCHE4_5 00000030

Symbol: BROCHE4_5
   Definitions
      At line 55 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 91 in file RK_PriseEnMain_Moteurs.s
      At line 95 in file RK_PriseEnMain_Moteurs.s
      At line 99 in file RK_PriseEnMain_Moteurs.s
      At line 105 in file RK_PriseEnMain_Moteurs.s
      At line 107 in file RK_PriseEnMain_Moteurs.s

BROCHE6 00000040

Symbol: BROCHE6
   Definitions
      At line 57 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: BROCHE6 unused
BROCHE6_7 000000C0

Symbol: BROCHE6_7
   Definitions
      At line 59 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 116 in file RK_PriseEnMain_Moteurs.s
      At line 120 in file RK_PriseEnMain_Moteurs.s
      At line 123 in file RK_PriseEnMain_Moteurs.s

DUREE 002FFFFF

Symbol: DUREE
   Definitions
      At line 64 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: DUREE unused
DUREE90 0AFFFFFF

Symbol: DUREE90
   Definitions
      At line 66 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 166 in file RK_PriseEnMain_Moteurs.s
Comment: DUREE90 used once
GPIO_I_PUR 00000510

Symbol: GPIO_I_PUR



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 52 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 119 in file RK_PriseEnMain_Moteurs.s
      At line 136 in file RK_PriseEnMain_Moteurs.s

GPIO_O_DEN 0000051C

Symbol: GPIO_O_DEN
   Definitions
      At line 49 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 94 in file RK_PriseEnMain_Moteurs.s
      At line 115 in file RK_PriseEnMain_Moteurs.s
      At line 132 in file RK_PriseEnMain_Moteurs.s

GPIO_O_DIR 00000400

Symbol: GPIO_O_DIR
   Definitions
      At line 41 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 90 in file RK_PriseEnMain_Moteurs.s
Comment: GPIO_O_DIR used once
GPIO_O_DR2R 00000500

Symbol: GPIO_O_DR2R
   Definitions
      At line 45 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 98 in file RK_PriseEnMain_Moteurs.s
Comment: GPIO_O_DR2R used once
GPIO_PORTD_BASE 40007000

Symbol: GPIO_PORTD_BASE
   Definitions
      At line 32 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 115 in file RK_PriseEnMain_Moteurs.s
      At line 119 in file RK_PriseEnMain_Moteurs.s
      At line 123 in file RK_PriseEnMain_Moteurs.s

GPIO_PORTE_BASE 40024000

Symbol: GPIO_PORTE_BASE
   Definitions
      At line 35 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 132 in file RK_PriseEnMain_Moteurs.s
      At line 136 in file RK_PriseEnMain_Moteurs.s
      At line 140 in file RK_PriseEnMain_Moteurs.s

GPIO_PORTF_BASE 40025000

Symbol: GPIO_PORTF_BASE
   Definitions
      At line 29 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 90 in file RK_PriseEnMain_Moteurs.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 94 in file RK_PriseEnMain_Moteurs.s
      At line 98 in file RK_PriseEnMain_Moteurs.s
      At line 107 in file RK_PriseEnMain_Moteurs.s

SYSCTL_PERIPH_GPIO 400FE108

Symbol: SYSCTL_PERIPH_GPIO
   Definitions
      At line 26 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 76 in file RK_PriseEnMain_Moteurs.s
Comment: SYSCTL_PERIPH_GPIO used once
14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

MOTEUR_DROIT_ARRIERE 00000000

Symbol: MOTEUR_DROIT_ARRIERE
   Definitions
      At line 16 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 189 in file RK_PriseEnMain_Moteurs.s
Comment: MOTEUR_DROIT_ARRIERE used once
MOTEUR_DROIT_AVANT 00000000

Symbol: MOTEUR_DROIT_AVANT
   Definitions
      At line 15 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 169 in file RK_PriseEnMain_Moteurs.s
      At line 182 in file RK_PriseEnMain_Moteurs.s
      At line 184 in file RK_PriseEnMain_Moteurs.s
      At line 192 in file RK_PriseEnMain_Moteurs.s
      At line 198 in file RK_PriseEnMain_Moteurs.s

MOTEUR_DROIT_INVERSE 00000000

Symbol: MOTEUR_DROIT_INVERSE
   Definitions
      At line 17 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: MOTEUR_DROIT_INVERSE unused
MOTEUR_DROIT_OFF 00000000

Symbol: MOTEUR_DROIT_OFF
   Definitions
      At line 14 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 178 in file RK_PriseEnMain_Moteurs.s
Comment: MOTEUR_DROIT_OFF used once
MOTEUR_DROIT_ON 00000000

Symbol: MOTEUR_DROIT_ON
   Definitions
      At line 13 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 163 in file RK_PriseEnMain_Moteurs.s
Comment: MOTEUR_DROIT_ON used once
MOTEUR_GAUCHE_ARRIERE 00000000

Symbol: MOTEUR_GAUCHE_ARRIERE
   Definitions
      At line 22 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 181 in file RK_PriseEnMain_Moteurs.s
Comment: MOTEUR_GAUCHE_ARRIERE used once
MOTEUR_GAUCHE_AVANT 00000000

Symbol: MOTEUR_GAUCHE_AVANT
   Definitions
      At line 21 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 170 in file RK_PriseEnMain_Moteurs.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

      At line 185 in file RK_PriseEnMain_Moteurs.s
      At line 190 in file RK_PriseEnMain_Moteurs.s
      At line 193 in file RK_PriseEnMain_Moteurs.s
      At line 197 in file RK_PriseEnMain_Moteurs.s

MOTEUR_GAUCHE_INVERSE 00000000

Symbol: MOTEUR_GAUCHE_INVERSE
   Definitions
      At line 23 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: MOTEUR_GAUCHE_INVERSE unused
MOTEUR_GAUCHE_OFF 00000000

Symbol: MOTEUR_GAUCHE_OFF
   Definitions
      At line 20 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 177 in file RK_PriseEnMain_Moteurs.s
Comment: MOTEUR_GAUCHE_OFF used once
MOTEUR_GAUCHE_ON 00000000

Symbol: MOTEUR_GAUCHE_ON
   Definitions
      At line 19 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 164 in file RK_PriseEnMain_Moteurs.s
Comment: MOTEUR_GAUCHE_ON used once
MOTEUR_INIT 00000000

Symbol: MOTEUR_INIT
   Definitions
      At line 11 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 160 in file RK_PriseEnMain_Moteurs.s
Comment: MOTEUR_INIT used once
11 symbols
374 symbols in table
